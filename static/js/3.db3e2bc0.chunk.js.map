{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem.js","components/Dialogs/MessagesItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogsItem","props","className","classes","dialogs__item","to","id","name","MessagesItem","messages__item","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","Dialogs","state","dialogsPage","dialogsElement","dialogsItemData","map","d","key","messagesElement","messagesItemData","m","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,cAAgB,+BAA+B,SAAW,0BAA0B,eAAiB,kC,sFCWxLC,EARI,SAACC,GAChB,OACE,yBAAKC,UAAWC,IAAQC,eACpB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKL,EAAMM,QCKvCC,EAPM,SAACP,GAClB,OACI,yBAAKC,UAAWC,IAAQM,gBACnBR,EAAMS,U,kCC2BnB,IAAMC,EAAeC,YAAiB,KAiBhCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAhBL,SAACb,GACtB,OACE,0BAAMe,SAAUf,EAAMgB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,SAAU,CAACC,IAAUT,GACrBU,UAAWC,IACXf,KAAK,oBAGT,6BACE,6CASOgB,EAhDf,SAAiBtB,GACf,IAAIuB,EAAQvB,EAAMwB,YACdC,EAAiBF,EAAMG,gBAAgBC,KAAI,SAACC,GAAD,OAC7C,kBAAC,EAAD,CAAatB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAEvB,GAAIA,GAAIuB,EAAEvB,QAE1CyB,EAAkBP,EAAMQ,iBAAiBJ,KAAI,SAACK,GAAD,OAC/C,kBAAC,EAAD,CAAcvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE3B,GAAIA,GAAI2B,EAAE3B,QAOrD,OACE,yBAAKJ,UAAWC,IAAQ+B,SACtB,yBAAKhC,UAAWC,IAAQgC,cACrBT,EACD,6BAAMK,GACN,yBAAK7B,UAAWC,IAAQiC,UACtB,6BACE,kBAACvB,EAAD,CAAqBG,SAXX,SAACqB,GACnBpC,EAAMqC,YAAYD,EAAOE,wB,iCCCdC,sBACXC,aAdkB,SAACjB,GACnB,MAAO,CACNC,YAAaD,EAAMC,gBAGC,SAACiB,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,SAOpCK,IAFWJ,CAGbjB","file":"static/js/3.db3e2bc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialogs__item\":\"Dialogs_dialogs__item__2Ej2w\",\"messages\":\"Dialogs_messages__1w_Up\",\"messages__item\":\"Dialogs_messages__item__1ilm2\"};","import React from 'react'\nimport classes from './Dialogs.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst DialogsItem =(props) => {\n    return (\n      <div className={classes.dialogs__item}>\n          <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\n      </div>\n    )\n}\n\nexport default DialogsItem ","import React from 'react'\nimport classes from './Dialogs.module.css'\n\n\n\nconst MessagesItem = (props) => {\n    return (\n        <div className={classes.messages__item}>\n            {props.message}\n        </div>\n    )\n}\nexport default MessagesItem","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogsItem from \"./DialogsItem.js\";\nimport MessagesItem from \"./MessagesItem.js\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../utils/FormControl\";\nimport { required, maxLengthCreator } from \"../utils/validators/validators\";\n\nfunction Dialogs(props) {\n  let state = props.dialogsPage;\n  let dialogsElement = state.dialogsItemData.map((d) => (\n    <DialogsItem name={d.name} key={d.id} id={d.id} />\n  ));\n  let messagesElement = state.messagesItemData.map((m) => (\n    <MessagesItem message={m.message} key={m.id} id={m.id} />\n  ));\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>\n        {dialogsElement}\n        <div>{messagesElement}</div>\n        <div className={classes.messages}>\n          <div>\n            <AddMessageFormRedux onSubmit={addNewMessage} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nconst maxLength100 = maxLengthCreator(100);\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          validate={[required, maxLength100]}\n          component={Textarea}\n          name=\"newMessageBody\"\n        ></Field>\n      </div>\n      <div>\n        <button>send</button>\n      </div>\n    </form>\n  );\n};\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import Dialogs from './Dialogs'\nimport { sendMessageCreator} from '../../redux/dialogs-reducer'\nimport { connect } from 'react-redux'\nimport { withAuthRedirect } from '../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\nlet mapStateToProps = (state) => {\n    return {\n     dialogsPage: state.dialogsPage\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n};\n//Compose\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),  \n    withAuthRedirect\n)(Dialogs)\n\n\n\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs) //HOC REDIRECT\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent) //connect\n// export default DialogsContainer"],"sourceRoot":""}